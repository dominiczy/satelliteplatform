/******************************************************
 * ArchC Resources header file.                       *
 * This file is automatically generated by ArchC      *
 * WITHOUT WARRANTY OF ANY KIND, either express       *
 * or implied.                                        *
 * For more information on ArchC, please visit:       *
 * http://www.archc.org                               *
 *                                                    *
 * The ArchC Team                                     *
 * Computer Systems Laboratory (LSC)                  *
 * IC-UNICAMP                                         *
 * http://www.lsc.ic.unicamp.br                       *
 ******************************************************/
 

#ifndef  MSP430_ARCH_H
#define  MSP430_ARCH_H

#include  "msp430_parms.H"
#include  "ac_arch_dec_if.H"
#include  "ac_storage.H"
#include  "ac_memport.H"
#include  "ac_regbank.H"
#include  "ac_reg.H"
 
// AC_GDB template class forward declaration
template <typename ac_word> class AC_GDB;

//!ArchC class for model-specific architectural resources.

class msp430_arch : public ac_arch_dec_if<msp430_parms::ac_word, msp430_parms::ac_Hword> {
public:
 
  //!Program Counter.
  ac_reg<unsigned> ac_pc;

  //!Storage Devices.
  ac_storage DM_stg;
  ac_memport<msp430_parms::ac_word, msp430_parms::ac_Hword> DM;
  ac_regbank<16, msp430_parms::ac_word, msp430_parms::ac_Dword> RB;
 

  //!Constructor.
  explicit msp430_arch();

  //!Module initialization method.
  virtual void init(int ac, char* av[]) = 0;

  //!Module finalization method.
  virtual void stop(int status = 0) = 0;

  //!GDB stub access virtual method declaration.
  virtual AC_GDB<msp430_parms::ac_word>* get_gdbstub() = 0;

  //!Virtual destructor declaration.
  virtual ~msp430_arch() {};

};

#endif  //_MSP430_ARCH_H
